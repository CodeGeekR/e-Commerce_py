"""
Django settings for cms project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-h5u5(h64!7x+te4=@sguk@la+sgfqjspf9i1jglngu=!vf5_#q'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'shop',
    'django.contrib.sites',  # para allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.twitter',
    'allauth.socialaccount.providers.github',
    'allauth.socialaccount.providers.instagram',
    'allauth.socialaccount.providers.twitch',
    'rest_framework',
    'corsheaders',
]

SITE_ID = 1

#provider specific settings
#SOCIALACCOUNT_PROVIDERS =


AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]
ACCOUNT_EMAIL_REQUIRED = True # para que el usuario se registre con email
ACCOUNT_EMAIL_VERIFICATION = 'mandatory' # para que el usuario verifique su email
ACCOUNT_AUTHENTICATION_METHOD = 'email' # para que el usuario se autentique con email
ACCOUNT_USERNAME_REQUIRED = False # para que el usuario no se registre con username
# ACCOUNT_UNIQUE_EMAIL = True # para que el email sea unico
# ACCOUNT_LOGOUT_ON_GET = True # para que el usuario se desloguee al hacer click en el boton de logout
# ACCOUNT_LOGOUT_REDIRECT_URL = '/' # para que el usuario sea redirigido al hacer logout
# ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = False # para que el usuario no tenga que ingresar dos veces la contraseña
# ACCOUNT_SESSION_REMEMBER = True # para que el usuario se mantenga logueado
# ACCOUNT_SIGNUP_FORM_CLASS = 'users.forms.SignUpForm' # para que el usuario se registre con email y contraseña
# ACCOUNT_USER_MODEL_USERNAME_FIELD = None # para que el usuario no se registre con username
# ACCOUNT_USER_MODEL_EMAIL_FIELD = 'email' # para que el usuario se registre con email
# ACCOUNT_FORMS = {'signup': 'users.forms.SignUpForm'} # para que el usuario se registre con email y contraseña
# LOGIN_REDIRECT_URL = '/' # para que el usuario sea redirigido al hacer login
# LOGOUT_REDIRECT_URL = '/' # para que el usuario sea redirigido al hacer logout
# ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE = True # para que el usuario se desloguee al cambiar la contraseña
#
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' # para que los correos se muestren en la consola
# DEFAULT_FROM_EMAIL = ' ' # para que el correo tenga un remitente
# EMAIL_HOST = 'smtp.gmail.com' # para que el correo tenga un host
# EMAIL_PORT = 587 # para que el correo tenga un puerto
# EMAIL_USE_TLS = True # para que el correo use tls
# EMAIL_HOST_USER = ' ' # para que el correo tenga un usuario
# EMAIL_HOST_PASSWORD = ' ' # para que el correo tenga una contraseña
# EMAIL_USE_SSL = False # para que el correo use ssl


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware', # para que el backend acepte peticiones de cualquier origen
]

CORS_ORIGIN_ALLOW_ALL = True # para que el backend acepte peticiones de cualquier origen

ROOT_URLCONF = 'cms.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [str("templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

            ],
        },
    },
]

WSGI_APPLICATION = 'cms.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

from .database_config import DB_NAME, DB_USER, DB_PASSWORD, DB_HOST, DB_PORT

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': DB_NAME,
        'USER': DB_USER,
        'PASSWORD': DB_PASSWORD,
        'HOST': DB_HOST,
        'PORT': DB_PORT,
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join('static'),
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
